{"update_time":"2019-04-04T04:21:45.061Z","content":{"html":"<div data-block-id=\"fc4fba30-e65f-42e7-a1b3-dfa58451dd5a\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 2px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"ddef7181-c3cb-4fc1-8354-44cc5e2d95a3\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1em; margin-bottom: 1px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-weight: 600; font-size: 1.5em; letter-spacing: -0.002em; line-height: 1.2; color: rgb(55, 53, 47);\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 2\" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\"><span style=\"font-weight:600\" data-token-index=\"0\">Algorithm</span></div></div></div><div data-block-id=\"db0f769c-222b-4d33-8e6e-3a647005cb3b\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\"><a href=\"https://leetcode-cn.com/problems/maximum-subarray/\" style=\"text-decoration:underline;color:inherit;cursor:pointer;word-wrap:break-word\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" data-token-index=\"0\">https://leetcode-cn.com/problems/maximum-subarray/</a></div></div></div></div><div data-block-id=\"68dceafb-2e2e-47ae-b03a-5780d03ece4e\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">最大子序也是dp中常见的问题。</div></div></div></div><div data-block-id=\"4564a7c7-464d-41ec-871f-8af7efbcee89\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"a07c62e6-38df-4998-b0ec-79a1fd0a45cd\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 4px; margin-bottom: 4px;\"><div style=\"display: flex;\"><div style=\"flex-grow: 1; border-radius: 3px; text-align: left; position: relative; background: rgb(247, 246, 243); width: 100%;\"><div class=\"line-numbers notion-code-block\" style=\"display: flex; overflow-x: auto;\"><div contenteditable=\"false\" spellcheck=\"false\" autocorrect=\"off\" autocapitalize=\"off\" data-root=\"true\" style=\"flex-grow: 1; flex-shrink: 1; text-align: left; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 85%; tab-size: 2; padding: 30px 16px 30px 20px; min-height: 1em; color: rgb(55, 53, 47); white-space: pre;\">给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。\n\n\n示例:\n\n输入: [-2,1,-3,4,-1,2,1,-5,4],\n输出: 6\n解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。<span>\n</span></div></div><div style=\"position: absolute; top: 0px; right: 0px; color: rgba(55, 53, 47, 0.6); display: flex; align-items: center; justify-content: flex-end; height: 30px;\"></div><div style=\"position: absolute; bottom: 0px; right: 0px; color: rgba(55, 53, 47, 0.6); display: flex; align-items: center; justify-content: flex-end; height: 30px;\"><div style=\"cursor: default; user-select: none; transition: background 120ms ease-in 0s; display: inline-flex; align-items: center; white-space: nowrap; height: 20px; border-radius: 3px; font-size: 12px; line-height: 1.2; padding-left: 5px; padding-right: 5px; color: rgba(55, 53, 47, 0.6); margin-right: 5px;\">Plain Text<svg viewBox=\"0 0 30 30\" style=\"width: 10px; height: 100%; display: block; fill: rgba(55, 53, 47, 0.3); flex-shrink: 0; backface-visibility: hidden; margin-left: 4px;\"><polygon points=\"15,17.4 4.8,7 2,9.8 15,23 28,9.8 25.2,7 \"></polygon></svg></div></div></div></div></div><div data-block-id=\"fe99a4c4-a35c-4ec7-857c-3c5199d8ecbb\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"5a6adfcf-182d-4692-88ae-68196336a48d\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">我在初次解答这类问题时候，陷入了误区。我以为要把 [4,-1,2,1] 这串找出来（实际上也是可以找出来......）,然后左右逼近搞了半天，用上dp后感觉就变简单了。</div></div></div></div><div data-block-id=\"6bf73a0b-6ca6-42e5-9195-36f5018d3077\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 4px; margin-bottom: 4px;\"><div style=\"display: flex;\"><div style=\"flex-grow: 1; border-radius: 3px; text-align: left; position: relative; background: rgb(247, 246, 243); width: 100%;\"><div class=\"line-numbers notion-code-block\" style=\"display: flex; overflow-x: auto;\"><div contenteditable=\"false\" spellcheck=\"false\" autocorrect=\"off\" autocapitalize=\"off\" data-root=\"true\" style=\"flex-grow: 1; flex-shrink: 1; text-align: left; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 85%; tab-size: 2; padding: 30px 16px 30px 20px; min-height: 1em; color: rgb(55, 53, 47); white-space: pre;\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Solution</span><span class=\"token punctuation\">:</span>\n    <span class=\"token keyword\">def</span> <span class=\"token function\">maxSubArray</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> nums<span class=\"token punctuation\">:</span> List<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span><span class=\"token operator\">&gt;</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">if</span>  <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\n            <span class=\"token keyword\">return</span> nums<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n            nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>nums<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> <span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>nums<span class=\"token punctuation\">)</span><span>\n</span></div></div><div style=\"position: absolute; top: 0px; right: 0px; color: rgba(55, 53, 47, 0.6); display: flex; align-items: center; justify-content: flex-end; height: 30px;\"></div><div style=\"position: absolute; bottom: 0px; right: 0px; color: rgba(55, 53, 47, 0.6); display: flex; align-items: center; justify-content: flex-end; height: 30px;\"><div style=\"cursor: default; user-select: none; transition: background 120ms ease-in 0s; display: inline-flex; align-items: center; white-space: nowrap; height: 20px; border-radius: 3px; font-size: 12px; line-height: 1.2; padding-left: 5px; padding-right: 5px; color: rgba(55, 53, 47, 0.6); margin-right: 5px;\">Python<svg viewBox=\"0 0 30 30\" style=\"width: 10px; height: 100%; display: block; fill: rgba(55, 53, 47, 0.3); flex-shrink: 0; backface-visibility: hidden; margin-left: 4px;\"><polygon points=\"15,17.4 4.8,7 2,9.8 15,23 28,9.8 25.2,7 \"></polygon></svg></div></div></div></div></div><div data-block-id=\"5efa99a3-dbda-4922-aaa9-6f11b22b5abd\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"f62b84ad-72e6-4da4-9188-c1712ecc7735\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\">上面的解法，用nums[i] 作为中间变量存储。实际上可以另外设置tmp，记录下最大值，这样最后可以直接返回，不用再求一遍 max(nums)</div></div></div></div><div data-block-id=\"e5454e9b-15a2-4ae0-a114-3a7e10541b56\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"d3f98953-a4ae-4068-8be7-aaf6a3f93414\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1em; margin-bottom: 1px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-weight: 600; font-size: 1.5em; letter-spacing: -0.002em; line-height: 1.2; color: rgb(55, 53, 47);\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 2\" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\"><span style=\"font-weight:600\" data-token-index=\"0\">Review</span></div></div></div><div data-block-id=\"82a8a7db-67e7-4ec7-ba8d-22b1ab16a3b8\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1em; margin-bottom: 1px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-weight: 600; font-size: 1.5em; letter-spacing: -0.002em; line-height: 1.2; color: rgb(55, 53, 47);\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 2\" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\"><span style=\"font-weight:600\" data-token-index=\"0\">Tip</span></div></div></div><div data-block-id=\"81281e1a-399e-4551-af54-a4e0bca1c7f3\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1em; margin-bottom: 1px; color: rgb(55, 53, 47);\"><div style=\"display: flex; width: 100%; font-weight: 600; font-size: 1.5em; letter-spacing: -0.002em; line-height: 1.2; color: rgb(55, 53, 47);\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"Heading 2\" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px;\"><span style=\"font-weight:600\" data-token-index=\"0\">Share</span></div></div></div><div data-block-id=\"74ec5e17-be39-4eae-a020-b79152e5a8a3\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div><div data-block-id=\"383a9f21-e479-4cef-9ffa-554a54b27900\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: rgb(55, 53, 47);\"><div style=\"margin-right: 4px; width: 24px; flex-grow: 0; flex-shrink: 0; display: flex; align-items: center; justify-content: center; min-height: calc((1.5em + 3px) + 3px); padding-right: 2px;\"><div style=\"width: 6px; height: 6px; border-radius: 6px; background: currentcolor; margin-top: 0.1em;\"></div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding-top: 3px; padding-bottom: 3px; text-align: left;\"><a href=\"https://github.com/encode/requests-async\" style=\"text-decoration:underline;color:inherit;cursor:pointer;word-wrap:break-word\" target=\"_blank\" rel=\"noopener noreferrer nofollow\" data-token-index=\"0\">https://github.com/encode/requests-async</a></div></div><div data-block-id=\"65160714-7aaa-47d3-9c76-418f22c19a2d\" class=\"notion-selectable\" style=\"width: 100%; max-width: 100%; margin-top: 2px; margin-bottom: 0px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: rgb(55, 53, 47);\"><div style=\"margin-right: 4px; width: 24px; flex-grow: 0; flex-shrink: 0; display: flex; align-items: center; justify-content: center; min-height: calc((1.5em + 3px) + 3px); padding-right: 2px;\"><div style=\"width: 6px; height: 6px; border-radius: 6px; background: currentcolor; margin-top: 0.1em;\"></div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding-top: 3px; padding-bottom: 3px; text-align: left;\">encode （搞 drf 的那个团队）为 requests 加上了 async/await </div></div></div></div></div></div></div></div><div data-block-id=\"96c8077f-3c0b-4de3-820c-6e8ed649443f\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 1px;\"><div style=\"display: flex; align-items: flex-start; width: 100%; padding-left: 2px; color: rgb(55, 53, 47);\"><div style=\"margin-right: 4px; width: 24px; flex-grow: 0; flex-shrink: 0; display: flex; align-items: center; justify-content: center; min-height: calc((1.5em + 3px) + 3px); padding-right: 2px;\"><div style=\"width: 6px; height: 6px; border-radius: 6px; background: currentcolor; margin-top: 0.1em;\"></div></div><div style=\"flex: 1 1 0px; min-width: 1px; display: flex; flex-direction: column;\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\"List\" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding-top: 3px; padding-bottom: 3px; text-align: left; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div></div><div data-block-id=\"635befbd-9489-4313-bf9e-569220068903\" class=\"notion-selectable\" style=\"width: 100%; max-width: calc((100vw - 0px) - 192px); margin-top: 1px; margin-bottom: 0px;\"><div style=\"color: rgb(55, 53, 47);\"><div style=\"display: flex;\"><div contenteditable=\"false\" spellcheck=\"true\" placeholder=\" \" data-root=\"true\" style=\"max-width: 100%; width: 100%; white-space: pre-wrap; word-break: break-word; caret-color: rgb(55, 53, 47); padding: 3px 2px; min-height: 1em; color: rgb(55, 53, 47); -webkit-text-fill-color: rgba(55, 53, 47, 0.4);\"></div></div></div></div>","brief":"Algorithm\nhttps://leetcode-cn.com/problems/maximum-subarray/\n最大子序也是dp中常见的问题。\n给定一个整数数组 nums ，找到一个具有最大"}}